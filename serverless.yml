service: signup-stormless

provider:
  name: aws
  runtime: python2.7
  memorySize: 256
  timeout: 12
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action: [dynamodb:Query, dynamodb:Scan, dynamodb:GetItem, dynamodb:PutItem, dynamodb:UpdateItem, dynamodb:DeleteItem]
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  InviteSlack:
    stackstorm:
      action: slack.users.admin.invite
      input:
        email:       "{{ input.body.email }}"
        first_name:  "{{ input.body.first_name }}"
      config:
        admin: ${file(env.yml):slack}
      output:
        statusCode: 200
        body: "{{ output }}"
  RecordAC:
    timeout: 24
    stackstorm:
      action: activecampaign.contact_sync
      input:
        email: "{{ input.body.email }}"
        first_name: "{{ input.body.first_name }}"
        last_name: "{{ input.body.last_name }}"
      config: ${file(env.yml):active_campaign}

  RecordDB:
    handler: record_db/handler.endpoint
    # Don't mix with large stackstorm package to deploy individually
    # and quickly edit with Cloud9
    package:
      individually: true
      exclude:
        - ./**
      include:
        - record_db/**

custom:
  private: ${file(env.yml):private}
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  apigs3:
    dist: web
    resourceName: web


stepFunctions:
  stateMachines:
    signup:
      events:
        - http:
            path: signup
            method: POST
            cors: true
      definition: ${file(stepfunction.yml)}

resources:

  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-plugin-stackstorm
  - serverless-step-functions
  - serverless-apig-s3